trigger: none

schedules:
  - cron: '0 0 * * *' # daily midnight build
    displayName: Daily midnight E2E run
    branches:
      include:
        - develop
    always: false

variables:
  - group: bfa-app-QA

pool:
  vmImage: 'macos-latest'

steps:
  # Environment variables
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo CONTENTFUL_SPACE_ID=$(CONTENTFUL_SPACE_ID) >> ./.env.testing
        echo CONTENTFUL_CONTENT_ACCESS_TOKEN=$(CONTENTFUL_CONTENT_ACCESS_TOKEN) >> ./.env.testing
        echo CONTENTFUL_ENVIRONMENT=$(CONTENTFUL_ENVIRONMENT) >> ./.env.testing
        echo AUTH_PROVIDER_URL=${AUTH_PROVIDER_URL} >> ./.env.testing
        echo BASICFIT_SSO_SECRET=$(BASICFIT_SSO_SECRET) >> ./.env.testing
        echo BF_BACKEND_URL=$(BF_BACKEND_URL) >> ./.env.testing

  - task: DownloadSecureFile@1
    name: firebaseJson
    displayName: 'Fetching firebase config'
    inputs:
      secureFile: 'Android-google-services-QA.json'
      retryCount: 5

  - script: mv $(firebaseJson.secureFilePath) ./android/app/google-services.json
    workingDirectory: .
    displayName: 'Inyecting firebase config into app'

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '12.16.1'

  - script: npm install
    workingDirectory: .
    displayName: 'Install node dependencies'

  - script: npm run self-checkup
    workingDirectory: .
    displayName: 'Running linter and tests'

  # Android properties
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo isQABuild=true >> ./android/gradle.properties

  - script: npm run detox-android-build
    workingDirectory: .
    displayName: 'Build Android app'

  - script: |
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-30;google_apis;x86' &&
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_3_XL_API_30 -k 'system-images;android-30;google_apis;x86' --force

      $ANDROID_HOME/emulator/emulator -list-avds

      echo "Starting emulator"

      # Start emulator in background
      nohup $ANDROID_HOME/emulator/emulator -avd Pixel_3_XL_API_30 -no-snapshot > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      $ANDROID_HOME/platform-tools/adb devices

      echo "Emulator started"
    workingDirectory: .
    displayName: 'Installing and firing android Emulator'

  - script: npm run detox-android
    workingDirectory: .
    continueOnError: true
    displayName: 'Detox Android E2E testing'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'e2e/.output/e2e-test-report.xml'
      testRunTitle: 'BasicFitApp-E2E-Android'

  - task: CopyFiles@2
    inputs:
      contents: 'e2e/.output/videos/android*/**'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: Android-videos
