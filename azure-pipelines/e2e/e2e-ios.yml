trigger: none

schedules:
  - cron: '0 0 * * *' # daily midnight build
    displayName: Daily midnight E2E run
    branches:
      include:
        - develop
    always: false

variables:
  - group: bfa-app-QA

pool:
  vmImage: 'macos-latest'

steps:
  # Environment variables
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo CONTENTFUL_SPACE_ID=$(CONTENTFUL_SPACE_ID) >> ./.env.testing
        echo CONTENTFUL_CONTENT_ACCESS_TOKEN=$(CONTENTFUL_CONTENT_ACCESS_TOKEN) >> ./.env.testing
        echo CONTENTFUL_ENVIRONMENT=$(CONTENTFUL_ENVIRONMENT) >> ./.env.testing
        echo AUTH_PROVIDER_URL=${AUTH_PROVIDER_URL} >> ./.env.testing
        echo BASICFIT_SSO_SECRET=$(BASICFIT_SSO_SECRET) >> ./.env.testing
        echo BF_BACKEND_URL=$(BF_BACKEND_URL) >> ./.env.testing

  - task: DownloadSecureFile@1
    name: firebasePlist
    displayName: 'Fetching firebase config'
    inputs:
      secureFile: 'IOS-GoogleService-Info-QA.plist'
      retryCount: 5

  - script: mv $(firebasePlist.secureFilePath) ./ios/GoogleService-Info.plist
    workingDirectory: .
    displayName: 'Inyecting firebase config into app'

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '12.16.1'

  - script: npm install
    workingDirectory: .
    displayName: 'Install node dependencies'

  - script: npm run self-checkup
    workingDirectory: .
    displayName: 'Running linter and tests'

  - script: brew tap wix/brew && brew install applesimutils
    workingDirectory: .
    displayName: 'Installing apple simulator utils'

  - task: CocoaPods@0
    displayName: 'Install CocoaPods dependencies'
    inputs:
      workingDirectory: './ios'
      forceRepoUpdate: false

  - script: npm run detox-ios-build
    workingDirectory: .
    displayName: 'Build IOS app'

  - script: npm run detox-ios
    workingDirectory: .
    continueOnError: true
    displayName: 'Detox IOS E2E testing'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'e2e/.output/e2e-test-report.xml'
      testRunTitle: 'BasicFitApp-E2E-iOS'

  - task: CopyFiles@2
    inputs:
      contents: 'e2e/.output/videos/ios*/**'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: IOS-videos
